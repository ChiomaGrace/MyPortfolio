{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nexport let SharedService = class SharedService {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n  }\n  emailService(submittedEmail) {\n    // console.log(\"This console log is from the shared.service.ts. It is from the emailService function which is making the request to the server (expresss)\");\n    // console.log(\"This console log is from the shared.service.ts. It is from the emailService function which is returning a response from the form in the contact component:, submittedEmail\");\n    // console.log(\"This is all the data that was submitted from the form:\", submittedEmail);\n    return this._httpClient.post('/sendEmail', submittedEmail); //works but need to get mongoose errors\n  }\n};\n\nSharedService = __decorate([Injectable({\n  providedIn: 'root'\n})], SharedService);","map":{"version":3,"names":["Injectable","SharedService","constructor","_httpClient","emailService","submittedEmail","post","__decorate","providedIn"],"sources":["C:\\Users\\chioma.ubogagu.SV-NB-DEV-78\\Angular\\myPortfolio\\src\\app\\shared.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { lastValueFrom } from 'rxjs';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SharedService {\n\n  constructor(private _httpClient: HttpClient) { \n  }\n\n    emailService(submittedEmail : any){\n      // console.log(\"This console log is from the shared.service.ts. It is from the emailService function which is making the request to the server (expresss)\");\n      // console.log(\"This console log is from the shared.service.ts. It is from the emailService function which is returning a response from the form in the contact component:, submittedEmail\");\n      // console.log(\"This is all the data that was submitted from the form:\", submittedEmail);\n      return this._httpClient.post('/sendEmail', submittedEmail) //works but need to get mongoose errors\n  }\n\n\n  // testService() {\n  //   console.log(\"This is a console log from the test service function in the shared service file\");\n  //   return this._httpClient.get('/');\n  // }\n  \n\n\n  // Step 3 of FormData configure the service.ts and its needed functions so any .ts file can call on the service to provide it data\n\n}\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAUnC,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAExBC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;EAC/B;EAEEC,YAAYA,CAACC,cAAoB;IAC/B;IACA;IACA;IACA,OAAO,IAAI,CAACF,WAAW,CAACG,IAAI,CAAC,YAAY,EAAED,cAAc,CAAC,EAAC;EAC/D;CAYD;;AAtBYJ,aAAa,GAAAM,UAAA,EAJzBP,UAAU,CAAC;EACVQ,UAAU,EAAE;CACb,CAAC,C,EAEWP,aAAa,CAsBzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}